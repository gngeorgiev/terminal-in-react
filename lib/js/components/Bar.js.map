{"version":3,"sources":["../../../src/js/components/Bar.js"],"names":["handleClose","props","context","toggleShow","handleMinimise","toggleMinimize","handleMaximise","toggleMaximise","style","showActions","maximise","maxWidth","displayName","propTypes","object","bool","func","defaultProps","contextTypes"],"mappings":"klDA2BEA,W,CAAc,UAAM,CACd,EAAKC,KAAL,CAAWD,WADG,CAEhB,EAAKC,KAAL,CAAWD,WAAX,CAAuB,EAAKE,OAAL,CAAaC,UAApC,CAFgB,CAIhB,EAAKD,OAAL,CAAaC,UAAb,EAEH,C,GAGDC,c,CAAiB,UAAM,CACjB,EAAKH,KAAL,CAAWG,cADM,CAEnB,EAAKH,KAAL,CAAWG,cAAX,CAA0B,EAAKF,OAAL,CAAaG,cAAvC,CAFmB,CAInB,EAAKH,OAAL,CAAaG,cAAb,EAEH,C,GAGDC,c,CAAiB,UAAM,CACjB,EAAKL,KAAL,CAAWK,cADM,CAEnB,EAAKL,KAAL,CAAWK,cAAX,CAA0B,EAAKJ,OAAL,CAAaK,cAAvC,CAFmB,CAInB,EAAKL,OAAL,CAAaK,cAAb,EAEH,C,4DAEQ,OACwB,KAAKN,KAD7B,KACCO,KADD,KACQC,WADR,CAEP,MACE,gCACE,aAEM,KAAKP,OAAL,CAAaQ,QAAb,CAAwB,CAAEC,SAAU,MAAZ,CAAxB,GAFN,CADF,CAKE,UAAU,kBALZ,EAOI,GACA,+BAAK,OAAO,IAAZ,CAAiB,MAAM,KAAvB,EACE,kCAAQ,GAAG,IAAX,CAAgB,GAAG,IAAnB,CAAwB,EAAE,GAA1B,CAA8B,KAAK,KAAnC,CAAyC,QAAS,KAAKX,WAAvD,EADF,CAEE,kCACE,GAAG,IADL,CAEE,GAAG,IAFL,CAGE,EAAE,GAHJ,CAIE,KAAK,QAJP,CAKE,QAAS,KAAKI,cALhB,EAFF,CASE,kCACE,GAAG,IADL,CAEE,GAAG,IAFL,CAGE,EAAE,GAHJ,CAIE,KAAK,OAJP,CAKE,QAAS,KAAKE,cALhB,EATF,CARJ,CA4BH,C,sBAhFMM,W,CAAc,K,GAEdC,S,CAAY,CACjBL,MAAO,UAAUM,MADA,CAEjBL,YAAa,UAAUM,IAFN,CAGjBX,eAAgB,UAAUY,IAHT,CAIjBV,eAAgB,UAAUU,IAJT,CAKjBhB,YAAa,UAAUgB,IALN,C,GAQZC,Y,CAAe,CACpBT,QADoB,CAEpBC,cAFoB,C,GAKfS,Y,CAAe,CACpBR,SAAU,UAAUK,IADA,CAEpBZ,WAAY,UAAUa,IAFF,CAGpBX,eAAgB,UAAUW,IAHN,CAIpBT,eAAgB,UAAUS,IAJN,C","file":"Bar.js","sourcesContent":["import React, { Component } from 'react'; // eslint-disable-line\nimport PropTypes from 'prop-types';\n\nclass Bar extends Component {\n  static displayName = 'Bar';\n\n  static propTypes = {\n    style: PropTypes.object, // eslint-disable-line\n    showActions: PropTypes.bool,\n    handleMinimise: PropTypes.func,\n    handleMaximise: PropTypes.func,\n    handleClose: PropTypes.func,\n  };\n\n  static defaultProps = {\n    style: {},\n    showActions: true,\n  };\n\n  static contextTypes = {\n    maximise: PropTypes.bool,\n    toggleShow: PropTypes.func,\n    toggleMinimize: PropTypes.func,\n    toggleMaximise: PropTypes.func,\n  };\n\n  // Close the window\n  handleClose = () => {\n    if (this.props.handleClose) {\n      this.props.handleClose(this.context.toggleShow);\n    } else {\n      this.context.toggleShow();\n    }\n  };\n\n  // Minimise the window\n  handleMinimise = () => {\n    if (this.props.handleMinimise) {\n      this.props.handleMinimise(this.context.toggleMinimize);\n    } else {\n      this.context.toggleMinimize();\n    }\n  };\n\n  // Maximise the window\n  handleMaximise = () => {\n    if (this.props.handleMaximise) {\n      this.props.handleMaximise(this.context.toggleMaximise);\n    } else {\n      this.context.toggleMaximise();\n    }\n  };\n\n  render() {\n    const { style, showActions } = this.props;\n    return (\n      <div\n        style={{\n          ...style,\n          ...(this.context.maximise ? { maxWidth: '100%' } : {}),\n        }}\n        className=\"terminal-top-bar\"\n      >\n        { showActions && (\n          <svg height=\"20\" width=\"100\">\n            <circle cx=\"24\" cy=\"14\" r=\"5\" fill=\"red\" onClick={this.handleClose} />\n            <circle\n              cx=\"44\"\n              cy=\"14\"\n              r=\"5\"\n              fill=\"orange\"\n              onClick={this.handleMinimise}\n            />\n            <circle\n              cx=\"64\"\n              cy=\"14\"\n              r=\"5\"\n              fill=\"green\"\n              onClick={this.handleMaximise}\n            />\n          </svg>\n        ) }\n      </div>\n    );\n  }\n}\n\nexport default Bar;\n"]}