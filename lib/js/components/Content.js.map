{"version":3,"sources":["../../../src/js/components/Content.js"],"names":["state","summary","promptPrefix","history","historyCounter","input","keyInputs","componentWillMount","context","instances","find","index","props","id","setState","oldData","componentDidMount","focusInput","unregister","register","keys","length","handleChange","target","value","key","dontShowCommand","componentDidUpdate","inputWrapper","scrollIntoView","com","focus","handleKeyPress","handlerKeyPress","prompt","inputStyles","backgroundColor","symbol","maximise","activeTab","barShowing","tabsShowing","map","maxWidth","maxHeight","displayName","propTypes","string","object","objectOf","func","isRequired","defaultProps","contextTypes","bool","array"],"mappings":"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","file":"Content.js","sourcesContent":["import React, { Component } from 'react'; // eslint-disable-line\nimport PropTypes from 'prop-types';\n\nclass Content extends Component {\n  static displayName = 'Content';\n\n  static propTypes = {\n    id: PropTypes.string,\n    oldData: PropTypes.object, // eslint-disable-line\n    backgroundColor: PropTypes.objectOf(PropTypes.string),\n    prompt: PropTypes.objectOf(PropTypes.string),\n    inputStyles: PropTypes.objectOf(PropTypes.string),\n    register: PropTypes.func,\n    handleChange: PropTypes.func,\n    handlerKeyPress: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    oldData: {},\n  };\n\n  static contextTypes = {\n    symbol: PropTypes.string,\n    maximise: PropTypes.bool,\n    instances: PropTypes.array,\n    activeTab: PropTypes.string,\n    barShowing: PropTypes.bool,\n    tabsShowing: PropTypes.bool,\n  };\n\n  state = {\n    summary: [],\n    promptPrefix: '',\n    history: [],\n    historyCounter: 0,\n    input: [],\n    keyInputs: [],\n  };\n\n  componentWillMount = () => {\n    const data = this.context.instances.find(i => i.index === this.props.id);\n    if (data) {\n      this.setState(data.oldData);\n    }\n  };\n\n  componentDidMount = () => {\n    this.focusInput();\n    const data = this.context.instances.find(i => i.index === this.props.id);\n    this.unregister = this.props.register(this);\n    if (!data || Object.keys(data.oldData).length === 0) {\n      this.handleChange({ target: { value: 'show' }, key: 'Enter', dontShowCommand: true });\n    }\n  };\n\n  // Adjust scrolling\n  componentDidUpdate = () => {\n    if (this.inputWrapper !== null) {\n      this.inputWrapper.scrollIntoView(false);\n    }\n  };\n\n  componentWillUnmount() {\n    this.unregister(this.state);\n  }\n\n  focusInput = () => {\n    if (this.com !== null) {\n      this.com.focus();\n    }\n  };\n\n  handleChange = (e) => {\n    this.props.handleChange(this, e);\n  }\n\n  handleKeyPress = (e) => {\n    this.props.handlerKeyPress(this, e, this.com);\n  }\n\n  render() {\n    const { prompt, inputStyles, backgroundColor, id } = this.props;\n    const { symbol, maximise, activeTab, barShowing, tabsShowing } = this.context;\n\n    if (id !== activeTab) {\n      return null;\n    }\n\n    const output = this.state.summary.map((content, i) => {\n      if (typeof content === 'string' && content.length === 0) {\n        return <div className=\"terminal-output-line\" key={i}>&nbsp;</div>;\n      }\n      return <pre className=\"terminal-output-line\" key={i}>{content}</pre>;\n    });\n\n    let toSubtract = 30;\n    if (!barShowing) {\n      toSubtract -= 30;\n    }\n    if (tabsShowing) {\n      toSubtract += 30;\n    }\n\n    return (\n      <div\n        className=\"terminal-container terminal-container-main\"\n        style={{\n          ...backgroundColor,\n          ...(maximise\n            ? { maxWidth: '100%', maxHeight: `calc(100% - ${toSubtract}px)` }\n            : {}),\n        }}\n        onClick={this.focusInput}\n      >\n        <div className=\"terminal-holder\">\n          <div className=\"terminal-content\">\n            <div className=\"terminal-input-area\">\n              {output}\n              <div\n                className=\"terminal-input\"\n                ref={elm => (this.inputWrapper = elm)}\n              >\n                <span className=\"terminal-prompt\" style={prompt}>\n                  {this.state.promptPrefix + symbol}\n                </span>\n                <input\n                  className=\"terminal-main-input\"\n                  style={inputStyles}\n                  type=\"text\"\n                  tabIndex=\"-1\"\n                  ref={com => (this.com = com)}\n                  onKeyPress={this.handleChange}\n                  onKeyDown={this.handleKeyPress}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Content;\n"]}